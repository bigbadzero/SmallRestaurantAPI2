// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmallRestaurantAPI.Data;

namespace SmallRestaurantAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210528202624_newMigration")]
    partial class newMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmallRestaurantAPI.Data.Combo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComboNumber")
                        .HasColumnType("int");

                    b.Property<int?>("Condiment1ID")
                        .HasColumnType("int");

                    b.Property<int?>("Condiment2ID")
                        .HasColumnType("int");

                    b.Property<int?>("Condiment3ID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("DrinkID")
                        .HasColumnType("int");

                    b.Property<int>("EntreeMenuItemID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("Condiment1ID");

                    b.HasIndex("Condiment2ID");

                    b.HasIndex("Condiment3ID");

                    b.HasIndex("DrinkID");

                    b.HasIndex("EntreeMenuItemID");

                    b.ToTable("Combos");
                });

            modelBuilder.Entity("SmallRestaurantAPI.Data.Condiment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Condiments");
                });

            modelBuilder.Entity("SmallRestaurantAPI.Data.Drink", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("SmallRestaurantAPI.Data.Ingredient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("SmallRestaurantAPI.Data.MenuItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BaseIngredient10ID")
                        .HasColumnType("int");

                    b.Property<int?>("BaseIngredient11ID")
                        .HasColumnType("int");

                    b.Property<int?>("BaseIngredient12ID")
                        .HasColumnType("int");

                    b.Property<int?>("BaseIngredient13ID")
                        .HasColumnType("int");

                    b.Property<int?>("BaseIngredient14ID")
                        .HasColumnType("int");

                    b.Property<int?>("BaseIngredient15ID")
                        .HasColumnType("int");

                    b.Property<int?>("BaseIngredient16ID")
                        .HasColumnType("int");

                    b.Property<int?>("BaseIngredient17ID")
                        .HasColumnType("int");

                    b.Property<int?>("BaseIngredient18ID")
                        .HasColumnType("int");

                    b.Property<int?>("BaseIngredient19ID")
                        .HasColumnType("int");

                    b.Property<int?>("BaseIngredient1ID")
                        .HasColumnType("int");

                    b.Property<int?>("BaseIngredient2ID")
                        .HasColumnType("int");

                    b.Property<int?>("BaseIngredient3ID")
                        .HasColumnType("int");

                    b.Property<int?>("BaseIngredient4ID")
                        .HasColumnType("int");

                    b.Property<int?>("BaseIngredient5ID")
                        .HasColumnType("int");

                    b.Property<int?>("BaseIngredient6ID")
                        .HasColumnType("int");

                    b.Property<int?>("BaseIngredient7ID")
                        .HasColumnType("int");

                    b.Property<int?>("BaseIngredient8ID")
                        .HasColumnType("int");

                    b.Property<int?>("BaseIngredient9ID")
                        .HasColumnType("int");

                    b.Property<int?>("Condiment1ID")
                        .HasColumnType("int");

                    b.Property<int?>("Condiment2ID")
                        .HasColumnType("int");

                    b.Property<int?>("Condiment3ID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("MenuItemTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("BaseIngredient10ID");

                    b.HasIndex("BaseIngredient11ID");

                    b.HasIndex("BaseIngredient12ID");

                    b.HasIndex("BaseIngredient13ID");

                    b.HasIndex("BaseIngredient14ID");

                    b.HasIndex("BaseIngredient15ID");

                    b.HasIndex("BaseIngredient16ID");

                    b.HasIndex("BaseIngredient17ID");

                    b.HasIndex("BaseIngredient18ID");

                    b.HasIndex("BaseIngredient19ID");

                    b.HasIndex("BaseIngredient1ID");

                    b.HasIndex("BaseIngredient2ID");

                    b.HasIndex("BaseIngredient3ID");

                    b.HasIndex("BaseIngredient4ID");

                    b.HasIndex("BaseIngredient5ID");

                    b.HasIndex("BaseIngredient6ID");

                    b.HasIndex("BaseIngredient7ID");

                    b.HasIndex("BaseIngredient8ID");

                    b.HasIndex("BaseIngredient9ID");

                    b.HasIndex("Condiment1ID");

                    b.HasIndex("Condiment2ID");

                    b.HasIndex("Condiment3ID");

                    b.HasIndex("MenuItemTypeID");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("SmallRestaurantAPI.Data.MenuItemType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("MenuItemTypes");
                });

            modelBuilder.Entity("SmallRestaurantAPI.Data.Combo", b =>
                {
                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "Condiment1")
                        .WithMany()
                        .HasForeignKey("Condiment1ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "Condiment2")
                        .WithMany()
                        .HasForeignKey("Condiment2ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "Condiment3")
                        .WithMany()
                        .HasForeignKey("Condiment3ID");

                    b.HasOne("SmallRestaurantAPI.Data.Drink", "Drink")
                        .WithMany()
                        .HasForeignKey("DrinkID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmallRestaurantAPI.Data.MenuItem", "EntreeMenuItem")
                        .WithMany()
                        .HasForeignKey("EntreeMenuItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Condiment1");

                    b.Navigation("Condiment2");

                    b.Navigation("Condiment3");

                    b.Navigation("Drink");

                    b.Navigation("EntreeMenuItem");
                });

            modelBuilder.Entity("SmallRestaurantAPI.Data.MenuItem", b =>
                {
                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "BaseIngredient10")
                        .WithMany()
                        .HasForeignKey("BaseIngredient10ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "BaseIngredient11")
                        .WithMany()
                        .HasForeignKey("BaseIngredient11ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "BaseIngredient12")
                        .WithMany()
                        .HasForeignKey("BaseIngredient12ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "BaseIngredient13")
                        .WithMany()
                        .HasForeignKey("BaseIngredient13ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "BaseIngredient14")
                        .WithMany()
                        .HasForeignKey("BaseIngredient14ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "BaseIngredient15")
                        .WithMany()
                        .HasForeignKey("BaseIngredient15ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "BaseIngredient16")
                        .WithMany()
                        .HasForeignKey("BaseIngredient16ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "BaseIngredient17")
                        .WithMany()
                        .HasForeignKey("BaseIngredient17ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "BaseIngredient18")
                        .WithMany()
                        .HasForeignKey("BaseIngredient18ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "BaseIngredient19")
                        .WithMany()
                        .HasForeignKey("BaseIngredient19ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "BaseIngredient1")
                        .WithMany()
                        .HasForeignKey("BaseIngredient1ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "BaseIngredient2")
                        .WithMany()
                        .HasForeignKey("BaseIngredient2ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "BaseIngredient3")
                        .WithMany()
                        .HasForeignKey("BaseIngredient3ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "BaseIngredient4")
                        .WithMany()
                        .HasForeignKey("BaseIngredient4ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "BaseIngredient5")
                        .WithMany()
                        .HasForeignKey("BaseIngredient5ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "BaseIngredient6")
                        .WithMany()
                        .HasForeignKey("BaseIngredient6ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "BaseIngredient7")
                        .WithMany()
                        .HasForeignKey("BaseIngredient7ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "BaseIngredient8")
                        .WithMany()
                        .HasForeignKey("BaseIngredient8ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "BaseIngredient9")
                        .WithMany()
                        .HasForeignKey("BaseIngredient9ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "Condiment1")
                        .WithMany()
                        .HasForeignKey("Condiment1ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "Condiment2")
                        .WithMany()
                        .HasForeignKey("Condiment2ID");

                    b.HasOne("SmallRestaurantAPI.Data.Ingredient", "Condiment3")
                        .WithMany()
                        .HasForeignKey("Condiment3ID");

                    b.HasOne("SmallRestaurantAPI.Data.MenuItemType", "MenuItemType")
                        .WithMany()
                        .HasForeignKey("MenuItemTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseIngredient1");

                    b.Navigation("BaseIngredient10");

                    b.Navigation("BaseIngredient11");

                    b.Navigation("BaseIngredient12");

                    b.Navigation("BaseIngredient13");

                    b.Navigation("BaseIngredient14");

                    b.Navigation("BaseIngredient15");

                    b.Navigation("BaseIngredient16");

                    b.Navigation("BaseIngredient17");

                    b.Navigation("BaseIngredient18");

                    b.Navigation("BaseIngredient19");

                    b.Navigation("BaseIngredient2");

                    b.Navigation("BaseIngredient3");

                    b.Navigation("BaseIngredient4");

                    b.Navigation("BaseIngredient5");

                    b.Navigation("BaseIngredient6");

                    b.Navigation("BaseIngredient7");

                    b.Navigation("BaseIngredient8");

                    b.Navigation("BaseIngredient9");

                    b.Navigation("Condiment1");

                    b.Navigation("Condiment2");

                    b.Navigation("Condiment3");

                    b.Navigation("MenuItemType");
                });
#pragma warning restore 612, 618
        }
    }
}
